/**
 * Markdown 템플릿 엔진 유틸리티
 * 요구사항: 템플릿을 사용한 Markdown 문서 생성
 */

import { StoryResponse, StoryDifficulty } from './english-story.types';

/**
 * 템플릿 변수 타입 정의
 */
export interface TemplateData {
    title: string;
    date: string;
    difficulty: string;
    difficultyEn: StoryDifficulty;
    wordCount: number;
    words: Array<{
        englishWord: string;
        koreanMeaning: string;
    }>;
    englishStory: string;
    koreanTranslation: string;
}

/**
 * 사용 가능한 템플릿 목록
 */
export const AVAILABLE_TEMPLATES = {
    default: 'story-default.md',
    study: 'story-study.md',
    progress: 'story-progress.md'
} as const;

export type TemplateType = keyof typeof AVAILABLE_TEMPLATES;

/**
 * 기본 템플릿 내용들 (빌드 시점에 번들에 포함)
 */
const TEMPLATE_CONTENTS: Record<TemplateType, string> = {
    default: `# {{title}}

**생성일:** {{date}}  
**난이도:** {{difficulty}}  
**사용된 단어 수:** {{wordCount}}개

---

## 📚 사용된 단어들

{{#each words}}
- **{{englishWord}}**: {{koreanMeaning}}
{{/each}}

---

## 📖 영어 스토리

{{englishStory}}

---

## 🇰🇷 한국어 해석

{{koreanTranslation}}

---

*이 문서는 AI Solution Hub에서 자동 생성되었습니다.*`,

    study: `# Study Notes: {{title}}

Generated on {{date}} | Difficulty: {{difficulty}}

## Vocabulary ({{wordCount}} words)

{{#each words}}
| {{englishWord}} | {{koreanMeaning}} |
{{/each}}

## English Story

> {{englishStory}}

## Korean Translation

> {{koreanTranslation}}

---

### Study Tips

- Practice reading the story aloud
- Try to use these words in your own sentences
- Review the vocabulary regularly

*Generated by AI Solution Hub*`,

    progress: `---
title: "{{title}}"
date: "{{date}}"
difficulty: "{{difficulty}}"
wordCount: {{wordCount}}
tags: [english, story, vocabulary]
---

## Vocabulary

{{#each words}}
- [ ] **{{englishWord}}** - {{koreanMeaning}}
{{/each}}

## Story

{{englishStory}}

## Translation

{{koreanTranslation}}

## Progress Tracking

- [ ] Read the story
- [ ] Understand all vocabulary
- [ ] Practice pronunciation
- [ ] Use words in sentences`
};

/**
 * 간단한 템플릿 엔진 구현
 * Handlebars 스타일의 변수 치환과 반복문 지원
 */
class SimpleTemplateEngine {
    /**
     * 템플릿을 렌더링합니다
     */
    render(template: string, data: TemplateData): string {
        let result = template;

        // 반복문 처리 ({{#each words}}...{{/each}})
        result = this.processEachBlocks(result, data);

        // 단순 변수 치환 ({{variableName}})
        result = this.processVariables(result, data);

        return result;
    }

    /**
     * {{#each}} 블록을 처리합니다
     */
    private processEachBlocks(template: string, data: TemplateData): string {
        const eachRegex = /\{\{#each\s+(\w+)\}\}([\s\S]*?)\{\{\/each\}\}/g;

        return template.replace(eachRegex, (match, arrayName, blockContent) => {
            const arrayData = data[arrayName as keyof TemplateData];

            if (!Array.isArray(arrayData)) {
                return '';
            }

            return arrayData.map(item => {
                let itemContent = blockContent;

                // 배열 아이템의 속성들을 치환
                if (typeof item === 'object' && item !== null) {
                    for (const [key, value] of Object.entries(item)) {
                        const regex = new RegExp(`\\{\\{${key}\\}\\}`, 'g');
                        itemContent = itemContent.replace(regex, String(value));
                    }
                }

                return itemContent;
            }).join('');
        });
    }

    /**
     * 단순 변수를 처리합니다
     */
    private processVariables(template: string, data: TemplateData): string {
        const variableRegex = /\{\{(\w+)\}\}/g;

        return template.replace(variableRegex, (match, variableName) => {
            const value = data[variableName as keyof TemplateData];
            return value !== undefined ? String(value) : match;
        });
    }
}

/**
 * StoryResponse를 TemplateData로 변환합니다
 */
export function storyToTemplateData(story: StoryResponse): TemplateData {
    const difficultyMap: Record<StoryDifficulty, string> = {
        easy: '쉬움',
        medium: '보통',
        hard: '어려움'
    };

    return {
        title: '영어 스토리',
        date: new Date().toLocaleDateString('ko-KR'),
        difficulty: difficultyMap[story.difficulty],
        difficultyEn: story.difficulty,
        wordCount: story.usedWords.length,
        words: story.usedWords,
        englishStory: stripHtmlTags(story.englishStory),
        koreanTranslation: story.koreanTranslation
    };
}

/**
 * HTML 태그를 제거합니다
 */
function stripHtmlTags(html: string): string {
    return html.replace(/<[^>]*>/g, '');
}

/**
 * 템플릿을 사용하여 Markdown 콘텐츠를 생성합니다
 */
export function generateMarkdownFromTemplate(
    story: StoryResponse,
    templateType: TemplateType = 'default'
): string {
    const engine = new SimpleTemplateEngine();
    const template = TEMPLATE_CONTENTS[templateType];
    const data = storyToTemplateData(story);

    return engine.render(template, data);
}

/**
 * 사용 가능한 템플릿 목록을 반환합니다
 */
export function getAvailableTemplates(): Array<{
    key: TemplateType;
    name: string;
    description: string;
}> {
    return [
        {
            key: 'default',
            name: '기본 템플릿',
            description: '기본적인 스토리 형식으로 구성된 템플릿'
        },
        {
            key: 'study',
            name: '학습용 템플릿',
            description: '학습 팁과 구조화된 형식의 템플릿'
        },
        {
            key: 'progress',
            name: '진도 관리 템플릿',
            description: '체크리스트와 메타데이터를 포함한 템플릿'
        }
    ];
}
